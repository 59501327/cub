var searchData=
[
  ['max',['Max',['../structcub_1_1_max.html',1,'cub']]],
  ['max',['Max',['../structcub_1_1_device_reduce.html#a974a241463ca892c8f5e73b879065e48',1,'cub::DeviceReduce']]],
  ['maxsmoccupancy',['MaxSmOccupancy',['../group___util_mgmt.html#gad47c4df33ee75496ad5ba3514c5c9334',1,'cub']]],
  ['min',['Min',['../structcub_1_1_min.html',1,'cub']]],
  ['min',['Min',['../structcub_1_1_device_reduce.html#a14d9c12a1beb9a04f77e903d07fa596a',1,'cub::DeviceReduce']]],
  ['multihistogrameven',['MultiHistogramEven',['../structcub_1_1_device_histogram.html#a4fc7e1ed4f63587ca17537bf93070d66',1,'cub::DeviceHistogram::MultiHistogramEven(void *d_temp_storage, size_t &amp;temp_storage_bytes, InputIteratorT d_samples, CounterT *d_histogram[NUM_ACTIVE_CHANNELS], int num_levels[NUM_ACTIVE_CHANNELS], LevelT lower_level[NUM_ACTIVE_CHANNELS], LevelT upper_level[NUM_ACTIVE_CHANNELS], int num_pixels, cudaStream_t stream=0, bool debug_synchronous=false)'],['../structcub_1_1_device_histogram.html#adc1758c3b563e736223e16463af9a2ea',1,'cub::DeviceHistogram::MultiHistogramEven(void *d_temp_storage, size_t &amp;temp_storage_bytes, InputIteratorT d_samples, CounterT *d_histogram[NUM_ACTIVE_CHANNELS], int num_levels[NUM_ACTIVE_CHANNELS], LevelT lower_level[NUM_ACTIVE_CHANNELS], LevelT upper_level[NUM_ACTIVE_CHANNELS], int num_row_pixels, int num_rows, int row_stride, cudaStream_t stream=0, bool debug_synchronous=false)']]],
  ['multihistogramrange',['MultiHistogramRange',['../structcub_1_1_device_histogram.html#a19dc8df9eca7c976a877f561b3b2b3cb',1,'cub::DeviceHistogram::MultiHistogramRange(void *d_temp_storage, size_t &amp;temp_storage_bytes, InputIteratorT d_samples, CounterT *d_histogram[NUM_ACTIVE_CHANNELS], int num_levels[NUM_ACTIVE_CHANNELS], LevelT *d_levels[NUM_ACTIVE_CHANNELS], int num_pixels, cudaStream_t stream=0, bool debug_synchronous=false)'],['../structcub_1_1_device_histogram.html#a3fa1d37034fa494be195a1e53176fe2e',1,'cub::DeviceHistogram::MultiHistogramRange(void *d_temp_storage, size_t &amp;temp_storage_bytes, InputIteratorT d_samples, CounterT *d_histogram[NUM_ACTIVE_CHANNELS], int num_levels[NUM_ACTIVE_CHANNELS], LevelT *d_levels[NUM_ACTIVE_CHANNELS], int num_row_pixels, int num_rows, int row_stride, cudaStream_t stream=0, bool debug_synchronous=false)']]]
];
